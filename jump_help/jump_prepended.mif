LEGEND:
 (REGISTER) = x" VALUE ",
 @{_func} ... function call, {_func} ... function execution

[PC*4]  actualpc :  instr  ; assembly                | description
[0000]  00000000 : 00000000; %
[0004]  00000001 : 2001ffff; % addi $1, $0, -1 					| (1) = x"FFFFFFFF"
[0008]  00000002 : 20020001; % addi $2, $0, 1					| (2) = x"00000001"
[000C]  00000003 : 34030055; % ori $3, $0, 0x55					| (3) = x"00000055"
[0010]  00000004 : 348402f0; % ori $4, $4, 0x2F0				| (4) = x"000002F0"  -- ? function call
[0014]  00000005 : 34a50224; % ori $5, $5, 0x224				| (5) = x"00000224"
[0018]  00000006 : 0800000b; % j j_okay							| JUMP to 0000000b [2C]
[001C]  00000007 : 00000000; %
[0020]  00000008 : 00000000; %
[0024]  00000009 : 00000000; %
[002C]  0000000b : ac000004; % sw $0, 4($0)						| store 0 to addr 4
[0030]  0000000c : 1400000e; % bne $0, $0, bne_false_fail		| DON'T JUMP
[0034]  0000000d : 00000000; %
[0038]  0000000e : 00000000; %
[003C]  0000000f : 00000000; %
[0040]  00000010 : ac000008; % sw $0, 8($0)						| store 0 to addr 8
[0044]  00000011 : 14010004; % bne $0, $1, bne_true_okay		| JUMP to 00000016 [48]
[0048]  00000012 : 00000000; %
[004C]  00000013 : 00000000; %
[0050]  00000014 : 00000000; %
[0058]  00000016 : ac00000c; % sw $0, 12($0)					| store 0 to addr 12
[005C]  00000017 : 0800001c; % j bne_end						| JUMP to 0000001c [70]
[0060]  00000018 : 00000000; %
[0064]  00000019 : 00000000; %
[0068]  0000001a : 00000000; %
[0070]  0000001c : 1001000e; % beq $0, $1, beq_false_fail		| DON'T JUMP
[0074]  0000001d : 00000000; %
[0078]  0000001e : 00000000; %
[007C]  0000001f : 00000000; %
[0080]  00000020 : ac000010; % sw $0, 16($0)					| store 0 to addr 16
[0084]  00000021 : 10000004; % beq $0, $0, beq_true_okay		| JUMP to 00000026
[0088]  00000022 : 00000000; %
[008C]  00000023 : 00000000; %
[0090]  00000024 : 00000000; %
[0098]  00000026 : ac000014; % sw $0, 20($0)					| store 0 to addr 20
[009C]  00000027 : 0800002c; % j beq_end						| JUMP to 0000002c
[00A0]  00000028 : 00000000; %
[00A4]  00000029 : 00000000; %
[00A8]  0000002a : 00000000; %
[00B0]  0000002c : 1c000013; % bgtz $0, bgtz_false1_fail		| DON'T JUMP
[00B4]  0000002d : 00000000; %
[00B8]  0000002e : 00000000; %
[00BC]  0000002f : 00000000; %
[00C0]  00000030 : ac000018; % sw $0, 24($0)					| store 0 to addr 24
[00C4]  00000031 : 1c20000f; % bgtz $1, bgtz_false2_fail		| DON'T JUMP
[00C8]  00000032 : 00000000; %
[00CC]  00000033 : 00000000; %
[00D0]  00000034 : 00000000; %
[00D4]  00000035 : ac00001c; % sw $0, 28($0)					| store 0 to addr 28
[00D8]  00000036 : 1c400004; % bgtz $2, bgtz_true_okay			| JUMP to 0000003b [EC]
[00DC]  00000037 : 00000000; %
[00E0]  00000038 : 00000000; %
[00E4]  00000039 : 00000000; %
[00EC]  0000003b : ac000020; % sw $0, 32($0)					| store 0 to addr 32
[00F0]  0000003c : 08000042; % j bgtz_end						| JUMP to 00000042 [108]
[00F4]  0000003d : 00000000; %
[00F8]  0000003e : 00000000; %
[00FC]  0000003f : 00000000; %
[0108]  00000042 : 18400014; % blez $2, blez_false_fail			| DON'T JUMP
[010C]  00000043 : 00000000; %
[0110]  00000044 : 00000000; %
[0114]  00000045 : 00000000; %
[0118]  00000046 : ac000018; % sw $0, 24($0)					| store 0 to 24
[011C]  00000047 : 18000004; % blez $0, blez_true1_okay			| JUMP to 0000004c [130]
[0120]  00000048 : 00000000; %
[0124]  00000049 : 00000000; %
[0128]  0000004a : 00000000; %
[0130]  0000004c : ac00001c; % sw $0, 28($0)					| store 0 to 28
[0134]  0000004d : 18200004; % blez $1, blez_true2_okay			| JUMP to 00000052 [148]
[0138]  0000004e : 00000000; %
[013C]  0000004f : 00000000; %
[0140]  00000050 : 00000000; %
[0148]  00000052 : ac000020; % sw $0, 32($0)					| store 0 to 32
[014C]  00000053 : 08000058; % j blez_end						| JUMP to 00000058 [160]
[0150]  00000054 : 00000000; %
[0154]  00000055 : 00000000; %
[0158]  00000056 : 00000000; %
[0160]  00000058 : 04000013; % bltz $0, bltz_false1_fail		| DON'T JUMP
[0164]  00000059 : 00000000; %
[0168]  0000005a : 00000000; %
[016C]  0000005b : 00000000; %
[0170]  0000005c : ac000018; % sw $0, 24($0)					| store 0 to 24
[0174]  0000005d : 0440000f; % bltz $2, bltz_false2_fail		| DON'T JUMP
[0178]  0000005e : 00000000; %
[017C]  0000005f : 00000000; %
[0180]  00000060 : 00000000; %
[0184]  00000061 : ac00001c; % sw $0, 28($0)					| store 0 to 28
[0188]  00000062 : 04200004; % bltz $1, bltz_true_okay			| JUMP to 00000067 [19C]
[018C]  00000063 : 00000000; %
[0190]  00000064 : 00000000; %
[0194]  00000065 : 00000000; %
[019C]  00000067 : ac000020; % sw $0, 32($0)					| store 0 to 32
[01A0]  00000068 : 0800006e; % j bltz_end						| JUMP to 0000006e [1B8]
[01A4]  00000069 : 00000000; %
[01A8]  0000006a : 00000000; %
[01AC]  0000006b : 00000000; %
[01B8]  0000006e : 04210014; % bgez $1, bgez_false_fail			| DON'T JUMP
[01BC]  0000006f : 00000000; %
[01C0]  00000070 : 00000000; %
[01C4]  00000071 : 00000000; %
[01C8]  00000072 : ac000018; % sw $0, 24($0)					| store 0 to 24
[01CC]  00000073 : 04010004; % bgez $0, bgez_true1_okay			| JUMP to 00000078 [1E0]
[01D0]  00000074 : 00000000; %
[01D4]  00000075 : 00000000; %
[01D8]  00000076 : 00000000; %
[01E0]  00000078 : ac00001c; % sw $0, 28($0)					| store 0 to 28
[01E4]  00000079 : 04410004; % bgez $2, bgez_true2_okay			| JUMP to 0000007e [1F8]
[01E8]  0000007a : 00000000; %
[01EC]  0000007b : 00000000; %
[01F0]  0000007c : 00000000; %
[01F8]  0000007e : ac000020; % sw $0, 32($0)					| store 0 to 32
[01FC]  0000007f : 08000084; % j bgez_end						| JUMP to 00000084 [210]
[0200]  00000080 : 00000000; %
[0204]  00000081 : 00000000; %
[0208]  00000082 : 00000000; %
[0210]  00000084 : 00a00008; % jr $5							| JUMP to 00000089 [224] --does not work yet
[0214]  00000085 : 00000000; %
[0218]  00000086 : 00000000; %
[021C]  00000087 : 00000000; % 
[0224]  00000089 : ac000024; % sw $0, 36($0)					| store 0 to addr 36
[0228]  0000008a : 0c0000bc; % jal _func						| JUMP to 000000BC [2F0], (31) = x"00000230" @{_func}
[022C]  0000008b : 00000000; %
[0230]  0000008c : 00000000; %
[0234]  0000008d : 00000000; %
[02F0]  000000bc : ac000028; % sw $0, 40($0) 					| store 0 to addr 40 {_func}
[02F4]  000000bd : 03e00008; % jr $31							| JUMP to 0000008c [230]
[02F8]  000000be : 00000000; %
[02FC]  000000bf : 00000000; %
[0300]  000000c0 : 00000000; %
[0230]  0000008c : 00000000; % 									| return here
[0234]  0000008d : 00000000; %
[0238]  0000008e : ac00002c; % sw $0, 44($0)					| store 0 to addr 44
[023C]  0000008f : 0080f809; % jalr $4							| JUMP to 000000BC [2FO], (31) = x"00000244" @{_func}
[0240]  00000090 : 00000000; %
[0244]  00000091 : 00000000; %
[0248]  00000092 : 00000000; %
[02F0]  000000bc : ac000028; % sw $0, 40($0) 					| store 0 to addr 40 {_func}
[02F4]  000000bd : 03e00008; % jr $31							| JUMP to 00000091 [244]
[02F8]  000000be : 00000000; %
[02FC]  000000bf : 00000000; %
[0300]  000000c0 : 00000000; %
[0244]  00000091 : 00000000; % 									| return here
[0248]  00000092 : 00000000; %
[024C]  00000093 : ac000030; % sw $0, 48($0)					| store 0 to addr 48
[0250]  00000094 : 04100022; % bltzal $0, _subfunc1				| DON'T JUMP
[0254]  00000095 : 00000000; %
[0258]  00000096 : 00000000; %
[025C]  00000097 : 00000000; %
[0260]  00000098 : ac000034; % sw $0, 52($0)					| store 0 to addr 52
[0264]  00000099 : 0430001d; % bltzal $1, _subfunc1				| JUMP to 000000B7 [2DC], (31) = x"0000026C" @{_subfunc1}
[0268]  0000009a : 00000000; %
[026C]  0000009b : 00000000; %
[0270]  0000009c : 00000000; %
[02DC]  000000b7 : ac000044; % sw $0, 68($0)					| store 0 to addr 68 {_subfunc1}
[02E0]  000000b8 : 03e00008; % jr $31							| first call: JUMP to 0000009b [26C]
[02E4]  000000b9 : 00000000; %
[02E8]  000000ba : 00000000; %
[02EC]  000000bb : 00000000; %
[026C]  0000009b : 00000000; % 									| return here
[0270]  0000009c : 00000000; %
[0274]  0000009d : ac000038; % sw $0, 56($0)					| store 0 to addr 56
[0278]  0000009e : 04500018; % bltzal $2, _subfunc1				| DON'T JUMP
[027C]  0000009f : 00000000; %
[0280]  000000a0 : 00000000; %
[0284]  000000a1 : 00000000; %
[0288]  000000a2 : ac00003c; % sw $0, 60($0)					| store 0 to 60
[028C]  000000a3 : 04110013; % bgezal $0, _subfunc1				| JUMP to 000000B7 [2DC], (31) = x"00000294" @{_subfunc1}
[0290]  000000a4 : 00000000; %
[0294]  000000a5 : 00000000; %
[0298]  000000a6 : 00000000; %
[02DC]  000000b7 : ac000044; % sw $0, 68($0)					| store 0 to addr 68 {_subfunc1}
[02E0]  000000b8 : 03e00008; % jr $31							| JUMP to 000000a5 [294]
[02E4]  000000b9 : 00000000; %
[02E8]  000000ba : 00000000; %
[02EC]  000000bb : 00000000; %
[0294]  000000a5 : 00000000; % 									| return here
[0298]  000000a6 : 00000000; %
[029C]  000000a7 : ac000034; % sw $0, 52($0)					| store 0 to addr 52
[02A0]  000000a8 : 0431000e; % bgezal $1, _subfunc1				| DON'T JUMP
[02A4]  000000a9 : 00000000; %
[02A8]  000000aa : 00000000; %
[02AC]  000000ab : 00000000; %
[02B0]  000000ac : ac000038; % sw $0, 56($0)					| store 0 to 56
[02B4]  000000ad : 04510009; % bgezal $2, _subfunc1				| JUMP to 000000B7 [2DC], (31) = x"000002BC" @{_subfunc1}
[02B8]  000000ae : 00000000; %
[02BC]  000000af : 00000000; %
[02C0]  000000b0 : 00000000; %
[02DC]  000000b7 : ac000044; % sw $0, 68($0)					| store 0 to addr 68 {_subfunc1}
[02E0]  000000b8 : 03e00008; % jr $31							| JUMP to 000000af [2BC]
[02E4]  000000b9 : 00000000; %
[02E8]  000000ba : 00000000; %
[02EC]  000000bb : 00000000; %
[02BC]  000000af : 00000000; % 									| return here
[02C0]  000000b0 : 00000000; %
[02C4]  000000b1 : ac00003c; % sw $0, 60($0)					| store 0 to addr 60
[02C8]  000000b2 : ac000040; % sw $0, 64($0)					| store 0 to addr 64
[02CC]  000000b3 : 080000b2; % j loop							| JUMP to 000000B2 [2C8], infinite loop
[02D0]  000000b4 : 00000000; %
[02D4]  000000b5 : 00000000; %
[02D8]  000000b6 : 00000000; %
[02C8]  000000b2 : ac000040; % sw $0, 64($0)					| store 0 to addr 64
[02CC]  000000b3 : 080000b2; % j loop							| JUMP to 000000B2 [2C8], infinite loop
[02D0]  000000b4 : 00000000; %
[02D4]  000000b5 : 00000000; %
[02D8]  000000b6 : 00000000; %
[02C8]  000000b2 : ac000040; % sw $0, 64($0)					| store 0 to addr 64
[02CC]  000000b3 : 080000b2; % j loop							| JUMP to 000000B2 [2C8], infinite loop
[02D0]  000000b4 : 00000000; %
[02D4]  000000b5 : 00000000; %
[02D8]  000000b6 : 00000000; %
